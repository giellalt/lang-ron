! Divvun & Giellatekno - open source grammars for Romanian language
! Copyright © 2015 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software ; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

! ========================================================================== !
! !!               !!!Rumenian morphological analyser
! ========================================================================== !

Multichar_Symbols  !!≈ !!!Definitions for @CODE@

!! !!Analysis symbols
! ----------------
!! The morphological analyses of wordforms for the Romanian
!! language are presented in this system in terms of the following symbols.
!! (It is highly suggested to follow existing standards when adding new tags).
                                           !!  !!Tags for POS

+N +V +A                               !!≈ * @CODE@ : Open POS's
+Adv +CC +CS +Interj +Pron +Num         !!≈ * @CODE@ : Open POS's

!! !!Verbal MSP

+Prs +Prt +Prf 				     !!≈ * @CODE@
+Ind +Imp +Conj +Opt +Sbj	     !!≈ * @CODE@
+Sg1 +Sg2 +Sg3 +Pl1 +Pl2 +Pl3    !!≈ * @CODE@
+Inf						     !!≈ * @CODE@


!! !!Nominal MSP

+Msc +Fem +Neu	     !!≈ * @CODE@
+Sg +Pl +Def +ef     !!≈ * @CODE@
+Nom +Gen +Voc	     !!≈ * @CODE@
+Dem +Pers		     !!≈ * @CODE@
+Adc +Ord		     !!≈ * @CODE@
+Indef +Def		     !!≈ * @CODE@

%>			         !!≈ * @CODE@
%^AA %^EA %^OA       !!≈ * @CODE@

!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.

LEXICON Root
 NounRoot ;
 AdjRoot ;
 VerbRoot ;
 AdvRoot ;
 Pronouns ;
 Numerals ;
 Prepositions ;
 Determinatives ;
 Punctuation ;



